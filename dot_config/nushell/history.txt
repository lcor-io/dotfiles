ls
ls -a
../
cd Documents/
../
Documents/
ls
dnf copr enable pgdev/ghostyy
dnf copr enable pgdev/ghostty
sudo dnf copr enable pgdev/ghostty
sudo dnf install ghostty
cd `../.config/Android Open Source Project/`ls
cd ../.config/
ls
echo $XDG_CONFIG_HOME
echo XDG_CONFIG_HOME
mkdir ghostty
cd ghostty/
nvim config
ls
cd .config/ghostty/
nvim config
ls
ls -a
ghostty +list-fonts
a
ls
:q
ls
nvim .config/nushell/config.nu
cd Documents/
ls
ywg
yupwego
cd yupwego/
ls
cd service.app/
.config
cd ../../../.config/
ls
cd nushell/
ls
cd ../
ls
cd ghostty/
nvim config
ls
cd .config/ghostty/
nvim config
curl -sS https://starship.rs/install.sh | sh
ls
cd Documents/yupwego/service.app/
ls
ls **/*.js | where size > 10kb
ls **/*.js | where size > 100kb
cd ../service.sales/
cd ../service.products/
cd .
cd
cd .config/hypr/
ls
cd colors/
ls
cd ../
cd ../../
ls
cd 
cd Téléchargements/
cd hyprland-1.3/themes/
mv *.conf ../../../.config/hypr/themes/
nvim config
ls
ywg
cd ../../
cd leoco/Documents/yupwego/env.starter/
cd Documents/yupwego/
cd service.app/
nvim
cd Documents/yupwego/service.sales/
cat package.json
pnpm utils:export
pn utils export
nvim
cd
cd .config/nushell/
ls
$env.config.buffer_editor = "nvim"
nvim config.nu
nvim env.nu
config nu
config nu --doc
config nu --doc | nu-highlight | less -R
echo $PATH
echo $env.PATH
cd .config/nushell/
nvim
ls
ls -a 
cd Documents/yupwego/service.sales/
:q
echo $env.PATH
ls
cd Documents/yupwego/service.sales/
cd ../../haskell/
ls
:q
cd
:q
config nu
pnpm --version
nvim .zshrc
config nu
ywg
(cd Documents/ && cd)
(cd Documents/ and cd)
(cd Documents/ ; cd)
ls
ywg
ls
cd htmx-app/
ls
cd ../../
ls
ywg
ywg-start
cd
ywg-start
pwd
pnpm
corepack --version
node --version
nvm --version
corepack
node --version
nvm
cd Documents/
ls
git clone https://github.com/Schniz/fnm.git
cd fnm/
cargo --version
nvim
cd .config/nushell/
cd 
cd .config/nushell/
nvim env.nu
cargo --version
sudo dnf install rust cargo
sudo dnf install rustup
rustup-init
cd .config/nushell/
nvim env.nu
cargo --version
cd Documents/fnm/
nvim
cargo build
ls
cd target/
ld
ls
nvim
cd ../
nvim
cd ../
rm -Rf fnm/
rm -rf fnm/
ls
explore
ls | explore
curl -fsSL https://fnm.vercel.app/install | bash
config nu
fnm --version
node --version
fnm list
fnm current
fnm ls-remote
fnm install lts
nvm list
nvm install 20.9.0
fnm install 20.9.0
fnm current
fnm list
fnm ls-remote
fnm install 22.12.0
fnm current
fnm list 
node --version
corepack enable pnpm
corepack use pnpm@latest
ls
pnpm --version
ywg
cd service.sales/
pnpm --version
ls
ls | explore
env nu
ghostty +list-themes
cd .config/ghostty/
ls
nvim config
cd .config/ghostty/
nvim config
cd .config/ghostty/
nvim config
cd .config/ghostty/
nvim config
cd .config/ghostty/
ls
nvim config
tmux --version
ywg
cd service.app/
cd 
cd .config/nvim/
ls
cd lua/
nvim 
ls
ghostty +list-themes
cd ../../ghostty/
nvim config
cd 
cd .config/nvim
ls
cd lua/
ghostty +list-themes
nvim
nvim
git status
git branch
cd ../service.broker_v2/
node --version
fnm list
node prisma/prices.js
git status
node prisma/create_en_contract_guarantees.js
cd .config/kitty/
nvim
kitty reload
cd .config/kitty/
nvim
cd .config/kitty/
nvim
cd .config/kitty/
nvim
cd .config/kitty/
nvim
cd .config/kitty/
nvim
cd .config/kitty/
cd .config/nvim/lua/
nvim
nvim
nvim
nvim
ywg
cd service.app/
ywg
cd service.app/
cd .config/kitty/
nvim
nvim
ywg
cd service.app/
cd .config/kitty/
ywg
cd
cd .config/ghostty/
nvim
nvim
nvim
ywg
cd service.app/
cd .config/kitty/
nvim
nvim
ywg
cd service.app/
cd
cd .config/kitty/
nivm
ywg
cd 
cd .config/ghostty/
nvim
:q
nvim
nvim
cd .config/kitty/
nvim
nvim
ywg
cd service.app/
ywg
cd service.app/
ks
ywg
cd service.sales/
ls
ywg
cd service.products/
cd .config/kitty/
nvim
cd .config/kitty/
nvim
nvim
nvim
ywg
cd service.sales/
ywg
cd service.products/
nvim
cd .config/kitty/
nvim
nvim
ywg
cd service.sales/
ywg
cd service.products/
cd .config/nushell/
ls
mkdir themes/
cd themes/
nvim
cd ../
ls
cd
ls
nvim
ywg
cd service.sales/
cd ../service.app/
ywg-start
ywg
cd service.broker_v2/
node prisma/create_en_contract_guarantees.js
node --version
node prisma/create_en_contract_guarantees.js
node prisma/prices.js
cd .config/kitty/
nvim
nvim
nvim
ywg
cd service.app/
ywg
cd service.broker_v2/
node prisma/copy_contract_countries.js
node prisma/copy_contract_affiliates.js
node prisma/copy_contract_prices.js
rg --version
cd .config
ls
cd autostart/
ls
cd ../
ls
cd waybar/
ls
nvim
git status
git add .
git commit -m "feat add endpoint to create suggestion from OpenAI"
git status
git push
git checkout main
git pull
git checkout -b fix/shengen
git status
git stauts
git status
git add .
git commit -m "fix dont set schengen contract if cancellation"
git status
git push
git checkout main
git pull
git branch -d fix/schengen
git branch
git branch -d fix/shengen
git pull
git log --pretty=%h»¦«%aN»¦«%s»¦«%aD | lines | split column "»¦«" sha1 committer desc merged_at | histogram committer merger | sort-by merger | reverse
cd ../nushell/
git checkout feat/suggestion
git status
nvim
ywg-start
node prisma/copy_contract_prices.js
git status
git add .
git commit -m "feat add recommendation component on the simulation page"
git status
git add .
git commit -m "feat save suggestions on both prod and preview"
git push
ywg-start
git status
git add .
git commit -m "feat add typewritter effect on recommendation"
git push
ywg-start
node prisma/create_contract_guarantees.js
node prisma/contract_countries.js
node prisma/create_contract_guarantees.js
node prisma/copy_contract_affiliates.js
docker logs fc4e7be3548a
node prisma/copy_contract_prices.js
ywg
cd service.products/
nvim
node prisma/copy_contract_prices.js
git status
git diff
git status
tig
git add .
git commit -m "feat recommendation only shows first 2 lines if not opened"
git push
git status 
git add .
git commit -m "feat arrow on recommendation block"
ywg
cd env.starter/
git status
git add .
git commit -m "feat add openai token to ci"
git status
git add .
git commit -m "feat add developer command from strapi"
git push
git checkout main
git pull
git checkout feat/suggestion
git rebase main
git push --force
git checkout main
git pull
git branch -d feat/suggestion
ywg
ywg-start
git checkout - fix/suggestion
git checkout -b fix/suggestion
cd service.app/
git checkout -b fix/suggestion
git status
git add .
git commit -m "fix gitlab ci"
git push
git checkout main
git pull
git branch -d fix/suggestion
git checkout -b fix/suggestion
ywg-start
git status
ywg-start
nvim .env
git status
git add .
git commit -m "feat add recommendation on mobile"
git status
git add .
git commit -m "refacto update mobile recommendation"
hyprshot 
git status
git add .
git commit -m "refacto recommendation on desktop"
git status
git add .
git commit -m "refacto remove sticky prices"
git status
git add .
git commit -m "refacto update contact button color on mobile"
git status
git add .
git diff
git commit -m "feat update recommendation messages"
git push
git status
git checko9ut 
git checkout main
git pull
git branch -d fix/suggestion
git status
ywg
ywg-start
cd .config/kitty/
ls
nvim
cd .config/kitty/
nvim
cd .config/
cd hypr/
nvim
cd .config/kitty/
nvim
cd .config/hypr/
ls
cd .config/hypr/
ls
nvim hyprland.conf
cd .config/swaylock/
ls
dnf copr enable erikreider/SwayNotificationCenter 
sudo dnf copr enable erikreider/SwayNotificationCenter 
sudo dnf install SwayNotificationCenter
notify-send "Test notif"
swaync
kill dunst
nvim
cd ../waybar/
nvim
killall dunst
notify-send "Test notif"
swaync
cd .config/kitty/
nvim
cd .config/
ls
mkdir backgrounds/
cd Téléchargements/
ls
mv 12259367.png ../.config/backgrounds/
cd backgrounds/
ls
mv 12259367.png test.png
hyprpaper
killall hyprpaper
hyprpaper
cd .config/backgrounds/
ls
cd Téléchargements/
mv yellow-cat.png ../.config/backgrounds/
mv romb.png ../.config/backgrounds/
mv tetris.png ../.config/backgrounds/
hyprpaper
mv cat-background.png ../.config/backgrounds/
mv cat_pacman.png ../.config/backgrounds/
mv rainbow-cat.png ../.config/backgrounds/
ls
hyprpaper &
killall hyprpaper
hyprpaper
cd ../
ls
cd Documents/
git clone https://github.com/nwg-piotr/nwg-look.git
cd nwg-look/
ls
nvim
make build
cd ../../.themes/
l
ls
gnome-tweaks 
ls
cd catppuccin-macchiato-yellow-standard+default/
ls
cd catppuccin-macchiato-yellow-standard+default-xhdpi/
ls
cd xfwm4/
ls
cd ../../
ls
mv catppuccin-macchiato-yellow-standard+default-xhdpi/ ../
ls
cd ../
ls
gnome-tweaks 
cd Everforest-Dark-BL/
ls
cd .../
cd ../
cd leoco/.themes/
ls
cd catppuccin-macchiato-yellow-standard+default/
ls
..
cd catppuccin-macchiato-yellow-standard+default-xhdpi/
ls
logout
reboot
gn
gnome-tweaks 
cd .themes/
ls
rm -r catppuccin-macchiato-yellow-standard+default catppuccin-macchiato-yellow-standard+default-xhdpi/
ls
cd ../Téléchargements/
ls
rm catppuccin-macchiato-yellow-standard+default.zip
ls
mv Catppuccin-Dark-Macchiato-BL-MB.zip ../.themes/
mv Catppuccin-Dark-Macchiato-BL-LB.zip ../.themes/
cd ../.themes/
ls
unzip Catppuccin-Dark-Macchiato-BL-LB.zip
ls
cd Catppuccin-Dark-Macchiato/
ls
gnome-tweaks 
cd .config/waybar/
ls
cd scripts/
ls
systemctl logout
systemctl --logout
hyprctl dispatch exit 1
reboot 
cd Documents/
ls
nwg-look/
make build
sudo make install
cd ../.themes
cd
cd .themes/
ls
rm -r Catppuccin-Dark-Macchiato
ls
rm Catppuccin-Dark-Macchiato-BL-LB.zip
rm -r Catppuccin-Dark-Macchiato-hdpi/ Catppuccin-Dark-Macchiato-xhdpi/
ls
nautilus
ls
cd Catppuccin-Dark-Macchiato-BL-MB/
ls
cd Catppuccin-Dark-Macchiato/
ls
cd ../
cd Catppuccin-Dark-Macchiato-hdpi/
ls
cd ../
mv ./* ../
ls
cd ../
ls
sudo dnf install hyprlock
cd .config/hypr/
cd .config/backgrounds/
ls
hyprpaper
killall hyprpaper
hyprpaper
ls
mv Téléchargements/forrest.png .config/backgrounds/
mv Téléchargements/Rainnight.jpg .config/backgrounds/rainnight.jpg
mv Téléchargements/tropic_island_morning.jpg .config/backgrounds/tropic.jpg
hyprpaper
cd ../kitty/
nvim
mv Téléchargements/tropic_island_day.jpg .config/backgrounds/tropic-day.jpg
hyprpaper
mv Téléchargements/tropic_island_night.jpg .config/backgrounds/tropic-night.jpg
hyprctl dispatch exit 1
ls
cd Images/
ls
cd wallpaper/
ls
mv ./* ../../.config/backgrounds/
cd 
cd .config/hypr/
notify-send "Test notif"
swaync-client -t
ls
cd .config/
mkdir swaync
cp /etc/xdg/swaync/config.json swaync/
cd swaync/
ls
cp /etc/xdg/swaync/style.css ./
ls
swaync-client --reload-config
swaync-client -rs
mv Téléchargements/macchiato.css .config/swaync/
swaync-client -rs
swaync-client -t
notify-send "Test notif"
swaync-client -rs
notify-send "Test notif"
swaync-client -t
nvim
cd ../wofi/
ls
nvim
hyprpaper
killall hyprpaper
hyprpaper
cd ../waybar/
ls
nvim
waybar --help
killall waybar
waybar
find Fira
waybar
nvim
cd ../wofi/
ls
cd .config/wofi/
hyprctl dispatch exit 1
cd .config/hypr/
cd .config/wofi/
help wofi
man wofi
man wofi7
man wofi 7
wofi --help
nvim
cd ../waybar/
killall waybar
hyprpaper
killall hyprpaper
hyprpaper
waybar
pwd
cd .config/backgrounds/
ls
hyprpaper
cd .config/backgrounds/
ls
hyprpaper
ls
hyprpaper
ls
hyprpaper
hyprctl dispatch exit 1
cd .config
mv nvim ./nvim.bak
la
ls
mv ~/.local/share/nvim ~/.local/share/nvim.bak
mv ~/.local/state/nvim ~/.local/state/nvim.bak
mv ~/.cache/nvim ~/.cache/nvim.bak<\n>
git clone --depth 1 https://github.com/AstroNvim/template ~/.config/nvim
ls
cd ../
cd .config/
ls
cd nvim
cd ../
ls
cd .config/
ls
git clone --depth 1 https://github.com/AstroNvim/template nvim
ls
cd nvim/
rm -rf .git/
ls
cd ../
cd nvim/
ls
nvim
cd lua/
cd .config/nvim.bak/
cd lua/
ywg
cd service.app/
nvim
nvim
nvim
cd .config/hypr/
nvim
cd .config/hypr/
killall hyprpaper
cd .config/wofi/
nvim
hyprctl dispatch exit 1
cd .config/hypr/
ls
nivm
cd ../nushell/
ls
nvim
cd ../hypr/
cd .config/
sudo dnf install hypridle
cd hypr/
loginctl --help
loginctl lock-session
nvim
ls
cd ../
ls
cd Documents/
cd hypr/
cd .config/
cd waybar/
nvim
cd ../
ls
cd gtk-3.0/
ls
nvim
cd ../gtk-4.0/
nvim
cd ../
ls
nvim
hyprshot --help
hyprshot region --clipboard-only
hyprshot -m region --clipboard-only
nvim
hyprctl dispatch exit 1
reboot
cd .config/hypr/
kitty --help
cd .config/kitty/
nvim
nvim
cd ../nvim
cd .config/nvim.bak/
cd lua/
nvim
ls
nvim
cd lua/
nvim
kitty --help
cd .config/kitty/
nvim
cd ../hypr/
sudo dnf install ligthly
sudo dnf install Lightly
nvim
cd ../
ls
cd Documents/
ls
git clone --depth=1 https://github.com/catppuccin/kde catppuccin-kde
cd catppuccin-kde/
ls
./install.sh
nvim
hyprctl dispatch exit 1
ywg
ls
nvim service.sfull_export.ts
rm service.sfull_export.ts
ls -a
cd ../
cd haskell/
ls
ghcup
nvim
cd ../
ls
cd gleam/
ls
cd vars/
ls
nvim
curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | sh
cd
cd .config/nushell/
nvim .zshrc
ghcup
nvim
cd ../nvim/lua
nvim
cd .config/nvim/lua/
nvim
cd 
cd Documents/
cd haskell/
nvim
cd
sudo dnf remove docker-desktop
cd Téléchargements/
sudo dnf install ./docker-desktop-x86_64.rpm
docker version
docker compose ps 
systemctl --user start docker-desktop
shutdown
shutdown -c
shutdown --help
systemctl poweroff
systemctl --user start docker-desktop
docker --version
docker version
docker container ls
docker compose version
docker version
qtpaths 
qtpaths6 
sudo dnf update
dnf remove konsole
sudo dnf remove konsole
sudo dnf remove zed
sudo dnf remove nemo
cd Documents/
git clone https://github.com/sxyazi/yazi.git yazi
cd yazi
cargo build --release --locked
mv target/release/yazi target/release/ya /usr/local/bin/
sudo mv target/release/yazi target/release/ya /usr/local/bin/
yazi
cd 
cd .config/nushell/
nvim
yazi
y
ya pack -a yazi-rs/flavors:catppuccin-macchiato<\n>
y
cd .config/yazi/
nvim
y
cd 
cd Documents/
ls
cd Documents/
git clone https://github.com/abenz1267/walker /tmp/walker<\n>
rm -r /tmp/walker/
git clone https://github.com/abenz1267/walker
cd walker/
go build -x -o walker
..
rm -r walker
git clone https://github.com/abenz1267/walker /tmp/walker<\n>
cd /tmp
ls
cd walker/
go build -x -o walker
ls
nvim
ls
nvim
cd
cd /tmp/walker/cmd/
go build -x -o walker
ls
sudo cp walker /usr/bin/
ls
cd ./
cd ../
ls
cd walker
cd cmd/
go build -x -o walker
git status --porcelain
cd ../
cd ..
ls
rm -r walker
git clone https://github.com/abenz1267/walker /tmp/walker<\n>
sudo dnf install gobject-introspection
cd walker/cmd/
go build -x -o walker
sudo dnf copr enable errornointernet/walker
sudo dnf install walker
walker
cd .config/
ls
y
cd .config/hypr/
nvim
walker
walker --gapplication-service
nvim
cd ../waybar/
wofi
nvim
cd ../wofi/
cd .config/hypr/
nvim hyprland.conf
nvim
nvim
hyprctl dispatch exit 1
cd .config/hypr/
sudo dnf remove dunst
cd .config/waybar/
waybar
hyprctl dispatch exit 1
ls
htop
killall docker-desktop
systemctl --reboot
systemctl --reboot --help
reboot
docker ls
docker container ls
cd .config/hypr/
sudo dnf remove alacritty
sudo dnf remove ghostty
sudo dnf remove hoppscotch
cd .config/hypr/
nvim
nvim
sudo dnf install chezmoi
sh -c "$(curl -fsLS get.chezmoi.io)"
cd 
cd Téléchargements/
sudo dnf install ./chezmoi-2.57.0-x86_64.rpm
docker container ls
docker --version
docker version
chezmoi --version
chezmoi init
cd ../
cd .local/share/
ls
cd chezmoi/
cd .config/
ls
chezmoi add ~/.config/kitty/
chezmoi diff
ls
cat dot_config/
cd dot_config/
ls
cd kitty/
ls
:q
cd ../../
chezmoi diff
chezmoi -v apply
cd
chezmoi diff
chezmoi -v apply
chezmoi cd
cd .local/share/chezmoi/
git add .
git commit -m "Initial commit"
git remote add origin git@github.com:$GITHUB_USERNAME/dotfiles.git
git branch -M main
git push -u origin main
git remote add origin git@github.com:$lcor-io/dotfiles.git
git remote remove origin
git remote add origin git@github.com:$lcor-io/dotfiles.git
git push -u origin main
git remote remove origin
git remote add origin git@github.com:lcor-io/dotfiles.git
git status
tig
git push -u origin main
git status
git branch
